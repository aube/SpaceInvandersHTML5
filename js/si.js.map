{"version":3,"sources":["0_settings.js","sounds.js","entities/bullet.js","entities/enemy.js","entities/explosion.js","entities/player.js","entities/star.js","entity.js","game.js"],"names":["SoundPool","filename","size","sounds","current","this","init","type","i","sound","Audio","volume","load","push","play","Bullet","x","y","targets","destroyOnOutOfScreen","width","Settings","bullet","height","pos","moveto","speed","getXY","color","draw","Enemy","pos0","armada","canvas","marginTop","enemy","wave","console","log","sprite","frame","getPosition","Explosion","destroyOnEndAnimation","explosion","Player","player","marginBottom","Star","Math","floor","random","star","Object","create","top","len","limit","inrow","rows","horisontalMargin","verticalMargin","Entity","cantOutOfScreen","update","dt","checkOutOfScreen","checkCollision","min","waveCalculate","offsetX","offsetY","Game","Objects","n","length","onCollision","splice","registerObject","ctx","save","drawImage","spritesImage","fillStyle","fillRect","restore","paramName","getX","indexOf","getY","param","SpaceInvandersHTML5","self","level","gameOver","lastTime","Date","now","lastFpsUpdateTime","fpsEl","document","getElementById","fps","undefined","gameStates","innerHTML","toFixed","startNewLevel","onGameOver","loop","requestAnimationFrame","generateEnemies","el","style","display","entType","start","pause","r","e","cellwidth","margin","cellheight","querySelector","addEventListener","event","preventDefault","target","clientX","clientY","prototype"],"mappings":"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","file":"si.js","sourcesContent":["'use strict';\n\n/*Настройки игры\nЗначение некоторых параметров пересчитываются в зависимости от типа данных:\n- Integer (кол-во пикселей),\n- Float (в процентах от ширины для X и высоты для Y экрана)\n- Array {x:[min,max],y:[min,max]} - rand(min,max)\nпри этом min и max так же могут быть Integer и Float\n*/\n\nvar Settings = Object.create(null);\n\n//Player\nSettings.player = {\n\twidth:.1\n\t,height:.06\n\t,speed:{x:0.7,y:0.7}\n\t,marginBottom:.01\n\t,sprite:{width:39,height:25,top:0,len:1}\n}\n\n//Bullet\nSettings.bullet = {\n\twidth:2 //px\n\t,height:7 //px\n\t,speed:{x:0,y:1.6}\n\t,color:\"yellow\"\n\t,sound:'sounds/laser.mp3'\n}\n\n//Star\nSettings.star = {\n\twidth:1 //px\n\t,height:1 //px\n\t,speed:{x:10,y:[0.1,4.1]}\n\t,color:\"white\"\n\t,limit:50\n}\n\n\n//Armada - cетка для объектов enemy\nSettings.armada = {\n\tinrow:7\n\t,rows:3\n\t,width:.8\n\t,height:.2\n\t,marginTop:.2\n}\n\n//Enemies\n//если заполнен параметр wave и скорость объектов\n//различается (при указании min и max), объекты ломают строй\n//и начинают перемещаться хаотично\nSettings.enemy = {\n\thorisontalMargin:.4\n\t,verticalMargin:.6\n\t,wave:{x:0.4,y:1.2}\n\t,speed:{x:30,y:40}\n\t,sprite:{width:38,height:28,top:78,len:1}\n}\n\n//Explosions\nSettings.explosion = {\n\tspeed:{x:0,y:0}\n\t,sprite:{width:512/13,height:38,top:32,len:12}\n\t,sound:'sounds/boom2.mp3'\n}\n\n\n\n\n","\nfunction SoundPool(filename, size)\n{\n\tvar size = size || 10;\n\tvar sounds = [];\n\tvar current = 0;\n\n\tthis.init = function(type) {\n\t\tfor (var i = 0; i < size; i++)\n\t\t{\n\t\t\tvar sound = new Audio(filename);\n\t\t\tsound.volume = .3;\n\t\t\tsound.load();\n\t\t\tsounds.push(sound);\n\t\t}\n\t}();\n\n\tthis.play = function() {\n\t\tsounds[current].play();\n\t\tcurrent = (current + 1) % size;\n\t};\n}\n\n","\nfunction Bullet(x,y,targets)\n{\n\t\n\tthis.type = 'bullet';\n\t\n\tthis.destroyOnOutOfScreen = true;\n\tthis.targets = targets;\n\t\n\t\n\tthis.width = Settings.bullet.width;\n\tthis.height = Settings.bullet.height;\n\tthis.pos = {x:x, y:y};\n\t\n\t\n\tthis.moveto = {\n\t\ty:-this.height*2,\n\t\tx:false\n\t}\n\t\n\tthis.speed = this.getXY('speed');\n\t\n\tthis.color = Settings.bullet.color;\n\t\n\tthis.draw();\n\t\n\t\n}\nBullet.prototype = Entity;\n\n","function Enemy(x,y)\n{\n\t\n\tthis.destroyOnOutOfScreen = false;\n\t\n\tthis.type = 'enemy';\n\tthis.targets = 'player';\n\tthis.pos0 = {x:x, y:y};\n\tthis.pos = {x:x, y: y - Settings.armada.height*canvas.height - Settings.armada.marginTop*canvas.height};\n\t\n\tthis.moveto = {x:x, y:y};\n\t\n\tthis.width = Settings.enemy.width;\n\tthis.height = Settings.enemy.height;\n\t\n\tthis.speed = this.getXY('speed');\n\tthis.wave = this.getXY('wave');\n\tconsole.log(this.wave);\n\t\n\t//this.wave = {\n\t//\tx:Settings.armada.width * this.wave.x * canvas.width,\n\t//\ty:Settings.armada.height * this.wave.y * canvas.height\n\t//}\n\t\n\t//console.log(this.wave);\n\t\n\t\n\tthis.color = Settings.enemy.color;\n\tthis.sprite = Settings.enemy.sprite;\n\tthis.frame = 0;\n\t\n\tthis.draw();\n\t\n\tthis.getPosition = function()\n\t{\n\t\t\n\t}\n\t\n}\nEnemy.prototype = Entity;\n","\nfunction Explosion(x,y,width,height)\n{\n\t\n\tthis.type = 'explosion';\n\t\n\tthis.destroyOnEndAnimation = true;\n\t\n\tthis.width = width;\n\tthis.height = height;\n\tthis.pos = {x:x, y:y};\n\t\n\t\n\tthis.moveto = {\n\t\ty:-this.height,\n\t\tx:false\n\t}\n\t\n\tthis.speed = this.getXY('speed');\n\t\n\tthis.sprite = Settings.explosion.sprite;\n\tthis.frame = 0;\n\t\n\t\n\tthis.draw();\n\t\n\t\n}\nExplosion.prototype = Entity;\n","\nfunction Player()\n{\n\t\n\tthis.type = 'player';\n\t\n\t//this.cantOutOfScreen = true;\n\t\n\t\n\tthis.width = Settings.player.width;\n\tthis.height = Settings.player.height;\n\tthis.pos = {x:canvas.width/2, y:canvas.height - Settings.player.height - canvas.height*Settings.player.marginBottom};\n\t\n\t\n\tthis.moveto = {\n\t\ty:false,\n\t\tx:false\n\t}\n\t\n\tthis.speed = this.getXY('speed');\n\t\n\tthis.color = Settings.player.color;\n\tthis.sprite = Settings.player.sprite;\n\tthis.frame = 0;\n\t\n\tthis.draw();\n\t\n\t\n}\nPlayer.prototype = Entity;\n","function Star()\n{\n\t\n\tthis.type = 'star';\n\t\n\tthis.destroyOnOutOfScreen = true;\n\t\n\tthis.moveto = {\n\t\tx:false,\n\t\ty: canvas.height+1\n\t};\n\t//console.log(this.moveto);\n\tthis.pos = {\n\t\tx:Math.floor((Math.random() * (canvas.width-1)) + 1),\n\t\ty:0\n\t};\n\t\n\tthis.width = Settings.star.width;\n\tthis.height = Settings.star.height;\n\t\n\tthis.speed = this.getXY('speed');\n\tthis.color = Settings.star.color;\n\t\n\tthis.draw();\n}\nStar.prototype = Entity;\n","//прототип для всех объектов в игре\n\nvar Entity = {\n\t\n\t/*\n\t * Дополнительные параметры поведения объектов\n\t * \n\tdestroyOnOutOfScreen - уничтожение объекта при выходе за границу экрана (true/false)\n\tcantOutOfScreen - запрет выхода за пределы экрана (true/false)\n\tdestroyOnEndAnimation - уничтожение объекта по завершении анимации (true/false)\n\ttargets - уничтожение при столкновении (тип объекта),\n\t*/\n\t\n\tdestroyOnOutOfScreen:false,\n\tcantOutOfScreen:false,\n\tdestroyOnEndAnimation:false,\n\ttargets:false,\n\t\n\t\n\t//пересчет координат,\n\t//вызов методов для контроля столкновений и выхода за границу экрана\n\tupdate:function(dt)\n\t{\n\t\t\n\t\tif (!this.checkOutOfScreen())\n\t\t\treturn false;\n\t\t\n\t\tif (!this.checkCollision())\n\t\t\treturn false;\n\t\t\n\t\t\n\t\tif (this.moveto.x !== false)\n\t\t{\n\t\t\tif (this.moveto.x == this.pos.x)\n\t\t\t\tthis.moveto.x = false;\n\t\t\telse if (this.moveto.x < this.pos.x)\n\t\t\t\tthis.pos.x -= Math.min(this.speed.x * dt, this.pos.x - this.moveto.x);\n\t\t\telse\n\t\t\t\tthis.pos.x += Math.min(this.speed.x * dt, this.moveto.x - this.pos.x);\n\t\t}\n\t\t\n\t\tif (this.moveto.y !== false)\n\t\t{\n\t\t\tif (this.moveto.y == this.pos.y)\n\t\t\t\tthis.moveto.y = false;\n\t\t\telse if (this.moveto.y < this.pos.y)\n\t\t\t\tthis.pos.y -= Math.min(this.speed.y * dt, this.pos.y - this.moveto.y);\n\t\t\telse\n\t\t\t\tthis.pos.y += Math.min(this.speed.y * dt, this.moveto.y - this.pos.y);\n\t\t}\n\t\t\n\t\t\n\t\tif (typeof this.wave == 'object')\n\t\t\tthis.waveCalculate();\n\t\t\n\t\tif (typeof this.sprite == 'object')\n\t\t{\n\t\t\tif (this.sprite.len > 1)\n\t\t\t{\n\t\t\t\tthis.frame++;\n\t\t\t\t//console.log(this.frame);\n\t\t\t}\n\t\t\tif (this.frame >= this.sprite.len)\n\t\t\t\tif (this.destroyOnEndAnimation)\n\t\t\t\t\treturn false;\n\t\t\t\telse\n\t\t\t\t\tthis.frame = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.draw();\n\t\treturn true;\n\t}\n\t\n\t//рассчет волнообразного движения объекта (применяется в enemy)\n\t,waveCalculate: function()\n\t{\n\t\t\n\t\tvar offsetX = this.pos0.x - this.pos.x;\n\t\tvar offsetY = this.pos0.y - this.pos.y;\n\t\t\n\t\t\n\t\tif (this.wave.x && this.moveto.x === false)\n\t\t\tthis.moveto.x = (offsetX >= 0 ? 1:-1) * this.wave.x + this.pos0.x;\n\t\t\n\t\tif (this.wave.y && this.moveto.y === false)\n\t\t\tthis.moveto.y = (offsetY >= 0 ? 1:-1) * this.wave.y + this.pos0.y;\n\t\t\n\t}\n\t\n\t//проверка столкновения с указанным в настройках типом объекта\n\t,checkCollision: function()\n\t{\n\t\t\n\t\tif (this.targets)\n\t\t{\n\t\t\tvar targets = Game.Objects[this.targets];\n\t\t\tfor(var n=0; n < targets.length; n++)\n\t\t\t{\n\t\t\t\tif (!(this.pos.x+this.width <= targets[n].pos.x\n\t\t\t\t\t|| this.pos.x > targets[n].pos.x+targets[n].width\n\t\t\t\t\t|| this.pos.y+this.height <= targets[n].pos.y\n\t\t\t\t\t|| this.pos.y > targets[n].pos.y+targets[n].height))\n\t\t\t\t{\n\t\t\t\t\ttargets[n].onCollision();\n\t\t\t\t\ttargets.splice(n,1);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\t\n\t\n\t//столкновение\n\t//создание взрыва\n\t,onCollision: function()\n\t{\n\t\tGame.registerObject(new Explosion(this.pos.x,this.pos.y, this.width,this.height));\n\t\t\n\t}\n\t\n\t//проверка выхода за границы экрана\n\t//уничтожение объекта \"star\" или запрет выхода \"player\"\n\t,checkOutOfScreen: function()\n\t{\n\t\tif (this.destroyOnOutOfScreen)\n\t\t{\n\t\t\tif (this.pos.x > canvas.width\n\t\t\t\t|| this.pos.x + this.width < 0\n\t\t\t\t|| this.pos.y > canvas.height\n\t\t\t\t|| this.pos.y + this.height < 0)\n\t\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (this.cantOutOfScreen)\n\t\t{\n\t\t\tif (this.pos.x + this.width > canvas.width)\n\t\t\t\tthis.pos.x = canvas.width - this.width;\n\t\t\t\n\t\t\tif (this.pos.x < 0 )\n\t\t\t\tthis.pos.x = 0;\n\t\t\t\n\t\t\tif (this.pos.y + this.height > canvas.height)\n\t\t\t\tthis.pos.y = canvas.height - this.width;\n\t\t\t\n\t\t\tif (this.pos.y < 0)\n\t\t\t\tthis.pos.y = 0;\n\t\t\t\n\t\t}\n\t\treturn true;\n\t}\n\t\n\t//отрисовка объекта\n\t//drawImage если указан спрайт\n\t//fillRect в остальных случаях\n\t,draw: function(){\n\t\tctx.save();\n\t\t\n\t\tif (typeof this.sprite == 'object')\n\t\t{\n\t\t\tctx.drawImage(spritesImage,\n\t\t\t\t\t\tthis.sprite.width * this.frame,\n\t\t\t\t\t\tthis.sprite.top,\n\t\t\t\t\t\tthis.sprite.width, this.sprite.height,\n\t\t\t\t\t\tthis.pos.x,this.pos.y,this.width,this.height)\n\t\t}\n\t\telse\n\t\t{\n\t\t\tctx.fillStyle = this.color;\n\t\t\tctx.fillRect(this.pos.x,this.pos.y,this.width,this.height);\n\t\t}\n\t\tctx.restore();\n\t}\n\t\n\t//получение числовых параметров из настроек\n\t,getXY: function(paramName){\n\t\t\n\t\tvar x,y;\n\t\tvar param = Settings[this.type][paramName];\n\t\t\n\t\tfunction getX(x)\n\t\t{\n\t\t\treturn (''+x).indexOf('.')<0 ? 1*x : canvas.width * x;\n\t\t}\n\t\t\n\t\tfunction getY(y)\n\t\t{\n\t\t\treturn (''+y).indexOf('.')<0 ? 1*y : canvas.height * y;\n\t\t}\n\t\t\n\t\tif (typeof param.x === 'object')\n\t\t\tx = Math.floor((Math.random() * getX(param.x[1])) + getX(param.x[0]));\n\t\telse\n\t\t\tx = getX(param.x);\n\t\t\n\t\tif (typeof param.y === 'object')\n\t\t\ty = Math.floor((Math.random() * getY(param.y[1])) + getY(param.y[0]));\n\t\telse\n\t\t\ty = getY(param.y);\n\t\t\n\t\treturn {\n\t\t\tx:x,\n\t\t\ty:y\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\n","\nvar SpaceInvandersHTML5 = function(width, height)\n{\n\tvar self = this;\n\t\t\n\tthis.level = 0;\n\tthis.gameOver = false;\n\t\n\t//loop parameters\n\tvar lastTime = Date.now();\n\tvar now = Date.now();\n\tvar dt = (now - lastTime) / 1000.0;\n\t\n\t//fps\n\tvar lastFpsUpdateTime = Date.now();\n\tvar fpsEl = document.getElementById('fps');\n\tvar fps = 0;\n\t\n\t//Коллекция для объектов {star:[],enemy:[],...}\n\tthis.Objects = Object.create(null);\n\t\n\t\n\t//добавление объекта в коллекцию\n\tthis.registerObject = function(Entity)\n\t{\n\t\t\n\t\tif (undefined == this.Objects[Entity.type])\n\t\t\tself.Objects[Entity.type] = [];\n\t\t\n\t\tself.Objects[Entity.type].push(Entity);\n\t\t\n\t\tif (typeof Settings[Entity.type].sound == 'object')\n\t\t\tSettings[Entity.type].sound.play();\n\t\t\n\t}\n\t\n\t\n\t//проверка параметров игры\n\tthis.gameStates = function()\n\t{\n\t\t\n\t\tif (now - lastFpsUpdateTime > 1000) {\n\t\t\tlastFpsUpdateTime = now;\n\t\t\tfpsEl.innerHTML = fps.toFixed(0) + 'fps';\n\t\t}\n\t\t\n\t\t//all enemies destroed, new level begin\n\t\tif (self.Objects['enemy'].length == 0)\n\t\t{\n\t\t\tself.startNewLevel();\n\t\t}\n\t\t\n\t\t//player destroed, game over\n\t\tif (self.Objects['player'].length == 0)\n\t\t{\n\t\t\tself.gameOver = true;\n\t\t\tself.onGameOver();\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t//основной цикл\n\tthis.loop = function()\n\t{\n\t\tnow = Date.now();\n\t\tdt = (now - lastTime) / 1000.0;\n\t\tfps = 1000 / (now - lastTime);\n\t\tlastTime = now;\n\t\t\n\t\tself.gameStates();\n\t\tself.update(dt);\n\t\t\n\t\trequestAnimationFrame(self.loop);\n\t}\n\t\n\t\n\t\n\t//начало игры и переход на следующий уровень\n\tthis.startNewLevel = function()\n\t{\n\t\tself.level++;\n\t\t\n\t\tSettings.enemy.wave={x:0.1,y:0.2};\n\t\tSettings.enemy.speed={x:0.05,y:0.05};\n\t\t\n\t\tif (self.level%2 == 0)\n\t\t{\n\t\t\tSettings.enemy.speed = {x:[0.01,0.4],y:[0.01,0.4]};\n\t\t}\n\t\t\n\t\tif (self.level%3 == 0)\n\t\t{\n\t\t\tSettings.enemy.speed = {x:[0.01,0.4],y:[0.01,0.4]};\n\t\t\tSettings.enemy.wave = {x:0.3,y:0.5};\n\t\t}\n\t\t\n\t\t\n\t\tself.generateEnemies();\n\t\t\n\t\tvar el = document.getElementById('level');\n\t\tel.innerHTML = 'level '+self.level;\n\t}\n\t\n\t\n\t//отображение надписи Game Over\n\tthis.onGameOver = function()\n\t{\n\t\tvar el = document.getElementById('gameOver');\n\t\tel.style.display = 'block';\n\t\tself.Objects.player = [];\n\t}\n\t\n\t\n\t//обновление координат объектов\n\tthis.update = function(dt)\n\t{\n\t\t//each update generate new star\n\t\t//звёзды создаются рандомно по оси Х\n\t\t//и летят по оси Y с разной скоростью\n\t\tif (self.Objects.star.length < Settings.star.limit)\n\t\t\tself.registerObject(new Star());\n\t\t\n\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t\n\t\tfor (var type in self.Objects)\n\t\t{\n\t\t\tvar entType = self.Objects[type];\n\t\t\tfor (var n = 0; n < entType.length; n++)\n\t\t\t{\n\t\t\t\tif (!entType[n].update(dt))\n\t\t\t\t{\n\t\t\t\t\tentType.splice(n--,1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t//начало игры, установка основных параметров\n\t//создание корабля игрока\n\t//запуск цикла\n\tthis.start = function()\n\t{\n\t\t\n\t\tself.gameOver = false;\n\t\tself.pause = false;\n\t\tself.level = 0;\n\t\t\n\t\tvar el = document.getElementById('gameOver');\n\t\tel.style.display = 'none';\n\t\t\n\t\tself.Objects = Object.create(null);\n\t\t\n\t\t//создаём звезду, чтобы параметр star был первым в коллекции объектов\n\t\t//и отрисовывались под остальными объектами\n\t\tself.registerObject(new Star());\n\t\t\n\t\t//create player ship\n\t\tself.registerObject(new Player());\n\t\t\n\t\t//create enemies armada\n\t\tself.startNewLevel();\n\t\t\n\t\tself.loop();\n\t\t\n\t}\n\t\n\t\n\t//создание вражеских кораблей по координатам,\n\t//указанным в сетке координат Settings.armada\n\tthis.generateEnemies = function(Entity)\n\t{\n\t\tfor (var r = 0; r < Settings.armada.rows; r++)\n\t\t{\n\t\t\tfor (var e = 0; e < Settings.armada.inrow; e++)\n\t\t\t{\n\t\t\t\tvar x = Settings.armada.cellwidth * e + Settings.armada.pos.x + Settings.enemy.margin.x;\n\t\t\t\tvar y = Settings.armada.cellheight * r + Settings.armada.pos.y + Settings.enemy.margin.y;\n\t\t\t\tself.registerObject(new Enemy(x,y));\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t//инициализация, дополнительный рассчет параметров\n\t//загрузка очереди звуков\n\t//привязка событий\n\tthis.init = function()\n\t{\n\t\t//player\n\t\tSettings.player.width = Math.floor(canvas.width * Settings.player.width);\n\t\tSettings.player.height = Math.floor(canvas.height * Settings.player.height);\n\n\t\t//cells\n\t\tSettings.armada.cellwidth = Math.floor(canvas.width * Settings.armada.width / Settings.armada.inrow);\n\t\tSettings.armada.cellheight = Math.floor(canvas.height * Settings.armada.height / Settings.armada.rows);\n\t\tSettings.armada.pos = {x:canvas.width * (1-Settings.armada.width) / 2, y:canvas.height * Settings.armada.marginTop};\n\n\t\t//enemies\n\t\tSettings.enemy.margin = {x:Settings.armada.cellwidth * Settings.enemy.horisontalMargin / 2, y:Settings.armada.cellheight * Settings.enemy.verticalMargin / 2};\n\t\tSettings.enemy.width = Math.floor(Settings.armada.cellwidth - Settings.enemy.margin.x * 2);\n\t\tSettings.enemy.height = Math.floor(Settings.armada.cellheight - Settings.enemy.margin.y * 2);\n\t\t\n\t\t\n\t\t//sounds bind\n\t\tfor (var n in Settings)\n\t\t{\n\t\t\tif (Settings[n].sound)\n\t\t\t{\n\t\t\t\tSettings[n].sound = new SoundPool(Settings[n].sound);\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t//actions\n\t\tdocument.querySelector('#gameOver > a').addEventListener(\"click\", function(event){\n\t\t\tself.start();\n\t\t\tevent.preventDefault();\n\t\t\t});\n\t\t\n\t\tdocument.addEventListener(\"click\", function(event){\n\t\t\t\n\t\t\tif (Game.gameOver) return;\n\t\t\tif (event.target != canvas) return;\n\t\t\t\n\t\t\tvar player = self.Objects.player[0];\n\t\t\t\n\t\t\tplayer.moveto.x = event.clientX - player.width/2;\n\t\t\tplayer.moveto.y = event.clientY - player.height/2;\n\t\t\tself.registerObject(new Bullet(player.pos.x + player.width/2 , player.pos.y, 'enemy'));\n\t\t});\n\t\t\n\t\t\n\t\t//poehali!\n\t\tself.start();\n\t\t\n\t}\n\t\n};\n\n\n\n\n"],"sourceRoot":"/source/"}